<UserControl x:Class="Lime.Client.TestConsole.Views.SessionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vw="clr-namespace:Lime.Client.TestConsole.Views"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
             mc:Ignorable="d" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"                 
             d:DataContext="{d:DesignData /DesignData/SessionDesignData.xaml}"   
             d:DesignHeight="700" 
             d:DesignWidth="700">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="25" />
        </Grid.RowDefinitions>


        <Grid Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="300*" />
                <RowDefinition Height="5" />
                <RowDefinition Height="150*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="100*" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Row="0" Margin="0,0,0,5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Label Grid.Row="0" Content="Transport" />
                <ComboBox Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" ItemsSource="{Binding AvailableTransports}" SelectedValue="{Binding SelectedTransport}" />

                <Label Grid.Row="1" Content="Host" />
                <TextBox Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Text="{Binding Host, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2" />

                <StackPanel Grid.Row="2" Grid.Column="0"  Margin="0,5" Orientation="Horizontal" Grid.ColumnSpan="2">
                    <Button Content="_Open" Command="{Binding OpenTransportCommand}" />
                    <Button Content="_Close" Command="{Binding CloseTransportCommand}" />
                </StackPanel>
            </Grid>

            <Grid Grid.Row="1" Margin="0,5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <ScrollViewer ScrollChanged="ScrollViewer_ScrollChanged" PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
                    <ListBox ItemsSource="{Binding Envelopes}">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <vw:EnvelopeView />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </ScrollViewer>
                <CheckBox Grid.Row="1" Margin="0,5" Content="Show raw values" IsChecked="{Binding ShowRawValues}" />
            </Grid>

            <GridSplitter Grid.Row="2" Height="5" HorizontalAlignment="Stretch"  />

            <Grid Grid.Row="3" Margin="0,5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <TextBox FontFamily="Courier New" 
                         TextWrapping="NoWrap" 
                         VerticalScrollBarVisibility="Visible"
                         HorizontalScrollBarVisibility="Auto"
                         AcceptsReturn="True" 
                         AcceptsTab="True"                          
                         Text="{Binding InputJson, UpdateSourceTrigger=PropertyChanged}" />
                <StackPanel Grid.Row="1" Margin="0,5" Orientation="Horizontal">
                    <Button Content="_Indent" ToolTip="Indent the JSON input" Command="{Binding IndentCommand}" />
                    <Button Content="_Validate" ToolTip="Validates the JSON input" Command="{Binding ValidateCommand}" />
                    <Button Content="_Parse" ToolTip="Parse the input variables" Command="{Binding ParseCommand}" />
                    <Button Content="_Send" ToolTip="Sends the JSON through the transport" Command="{Binding SendCommand}" />
                    <CheckBox Margin="0,0,5,0" VerticalAlignment="Center" Content="Parse before send" IsChecked="{Binding ParseBeforeSend}" />
                    <CheckBox Margin="0,0,5,0" VerticalAlignment="Center" Content="Clear after sent" IsChecked="{Binding ClearAfterSent}" />
                    <CheckBox VerticalAlignment="Center" Content="Send as raw" IsChecked="{Binding SendAsRaw}" />
                </StackPanel>
            </Grid>

            <GridSplitter Grid.Column="1" Grid.RowSpan="4" Width="5" VerticalAlignment="Stretch" />

            <Grid Grid.Row="0" Grid.RowSpan="4" Grid.Column="2" Margin="10,0">
                <Grid>
                    <Grid.RowDefinitions>                        
                        <RowDefinition Height="200*" />                        
                        <RowDefinition Height="200*" />                        
                        <RowDefinition Height="200*" />
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Label Grid.Row="0" Content="Variables" />
                        <ScrollViewer Grid.Row="1">
                            <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding Variables}">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="50*" />
                                    <DataGridTextColumn Header="Value" Binding="{Binding Value}" Width="50*"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </ScrollViewer>
                        <StackPanel Grid.Row="2" Orientation="Horizontal">
                            <Button Content="Add" />
                            <Button Content="Remove" />
                        </StackPanel>                        
                    </Grid>

                    <Grid Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        
                        <Label Grid.Row="0" Content="Templates" />
                        <ScrollViewer Grid.Row="1">
                            <ListBox ItemsSource="{Binding TemplatesView}" SelectedValue="{Binding SelectedTemplate}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDoubleClick">
                                        <i:InvokeCommandAction Command="{Binding LoadTemplateCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name}" />
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                                <ListBox.GroupStyle>
                                    <GroupStyle>
                                        <GroupStyle.HeaderTemplate>
                                            <DataTemplate>
                                                <TextBlock FontWeight="Bold"  Text="{Binding Name}" />
                                            </DataTemplate>
                                        </GroupStyle.HeaderTemplate>
                                    </GroupStyle>
                                </ListBox.GroupStyle>
                            </ListBox>
                        </ScrollViewer>
                        <StackPanel Grid.Row="2" Orientation="Horizontal">
                            <Button Content="_Load" ToolTip="Load the selected template to the input" Command="{Binding LoadTemplateCommand }" />
                            <Button Content="New" Command="{Binding NewTemplateCommand }" />
                            <Button Content="Remove" Command="{Binding RemoveTemplateCommand }" />
                        </StackPanel>
                    </Grid>

                    <Grid Grid.Row="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Content="Macros" />
                        <ScrollViewer Grid.Row="1">
                        </ScrollViewer>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>

        <StatusBar Grid.Row="1">
            <StatusBarItem>
                <ProgressBar Width="100" Height="16" IsIndeterminate="{Binding IsBusy}"  />
            </StatusBarItem>
            <Separator />
            <StatusBarItem>
                <TextBlock Text="{Binding StatusMessage}" />
            </StatusBarItem>
        </StatusBar>
    </Grid>
</UserControl>
