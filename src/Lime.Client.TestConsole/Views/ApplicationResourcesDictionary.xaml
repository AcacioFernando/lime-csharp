<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    mc:Ignorable="d">

    <SolidColorBrush x:Key="DarkModeColor">#2D2D2D</SolidColorBrush>
    <SolidColorBrush x:Key="DarkModeDataGridHeader">#18191A</SolidColorBrush>

    <Style x:Key="darkMode" TargetType="Control">
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Background" Value="{DynamicResource DarkModeColor}"></Setter>
        <Style.Resources>
            <Style TargetType="Label">
                <Setter Property="Foreground" Value="White"></Setter>
            </Style>
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="White"></Setter>
            </Style>
            <Style TargetType="CheckBox">
                <Setter Property="Foreground" Value="White"></Setter>
            </Style>
            <Style TargetType="TextBox">
                <Setter Property="Foreground" Value="White"></Setter>
                <Setter Property="CaretBrush" Value="White"></Setter>
                <Setter Property="Background" Value="Transparent"></Setter>
            </Style>
            <Style TargetType="xctk:WatermarkTextBox">
                <Setter Property="Foreground" Value="White"></Setter>
                <Setter Property="CaretBrush" Value="White"></Setter>
                <Setter Property="Background" Value="Transparent"></Setter>
            </Style>
            <Style TargetType="ListBox">
                <Setter Property="Foreground" Value="White"></Setter>
                <Setter Property="Background" Value="Transparent"></Setter>
            </Style>
            <Style TargetType="xctk:IntegerUpDown">
                <Setter Property="Foreground" Value="White"></Setter>
                <Setter Property="Background" Value="Transparent"></Setter>
            </Style>
            <Style TargetType="MenuItem">
                <Setter Property="Foreground" Value="White"></Setter>
                <Setter Property="Background" Value="Transparent"></Setter>
            </Style>
            <Style TargetType="DataGridRow">
                <Setter Property="Foreground" Value="White"></Setter>
                <Setter Property="Background" Value="{DynamicResource DarkModeColor}"></Setter>
            </Style>
            <Style TargetType="StackPanel">
                <Setter Property="Background" Value="Transparent"></Setter>
            </Style>
            <Style TargetType="StatusBar">
                <Setter Property="Background" Value="Transparent"></Setter>
            </Style>
            <Style TargetType="GridSplitter">
                <Setter Property="Background" Value="Transparent"></Setter>
            </Style>
            <Style TargetType="Button">
                <Setter Property="Foreground" Value="White"></Setter>
                <Setter Property="Background" Value="Transparent"></Setter>
                <Setter Property="Margin" Value="0,0,5,0" />
                <Setter Property="Padding" Value="15,2" />
            </Style>
            <Style TargetType="DataGridColumnHeader">
                <Setter Property="Foreground" Value="White"></Setter>
                <Setter Property="Background" Value="{DynamicResource DarkModeDataGridHeader}"></Setter>
            </Style>
        </Style.Resources>
    </Style>

    <ControlTemplate x:Key="JsonErrorTemplate">
        <StackPanel>
            <Border BorderBrush="Red" BorderThickness="1">
                <AdornedElementPlaceholder x:Name="controlWithError"/>
            </Border>
            <TextBlock FontSize="11" FontStyle="Italic" Foreground="Red" Margin="5,0,0,0"
                       Text="{Binding AdornedElement.(Validation.Errors)[0].ErrorContent, ElementName=controlWithError}"/>
        </StackPanel>
    </ControlTemplate>

    <Style x:Key="jsonErrorStyle" TargetType="Control">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="Margin" Value="0,0,0,15"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>