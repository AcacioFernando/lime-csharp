using System;
using System.Runtime.Serialization;
using Lime.Protocol;

namespace Lime.Messaging.Contents
{
    /// <summary>
    /// Defines a receipt for an invoice payment.
    /// </summary>
    /// <seealso cref="Lime.Protocol.Document" />
    [DataContract(Namespace = "http://limeprotocol.org/2014")]
    public class PaymentReceipt : Document
    {
        public const string MIME_TYPE = "application/vnd.lime.payment-receipt+json";

        public const string INVOICE_KEY = "invoice";
        public const string PROCESSOR_KEY = "processor";        
        public const string TRANSACTION_KEY = "transaction";
        public const string PAID_ON_DATE_KEY = "paidOn";
        public const string CURRENCY_KEY = "currency";
        public const string TAXES_KEY = "taxes";
        public const string TOTAL_KEY = "total";

        public static readonly MediaType MediaType = MediaType.Parse(MIME_TYPE);

        /// <summary>
        /// Initializes a new instance of the <see cref="PaymentReceipt"/> class.
        /// </summary>
        public PaymentReceipt() 
            : base(MediaType)
        {
        }

        /// <summary>
        /// Gets or sets the original invoice number.
        /// </summary>
        /// <value>
        /// The number.
        /// </value>
        [DataMember(Name = INVOICE_KEY)]
        public string Invoice { get; set; }

        /// <summary>
        /// Gets or sets the payment processor, which is the entity that handled the payment.
        /// </summary>
        /// <example>Credit card</example>
        /// <example>Cash</example>
        /// <value>
        /// The payment method.
        /// </value>
        [DataMember(Name = PROCESSOR_KEY)]
        public string Processor { get; set; }

        /// <summary>
        /// Gets or sets the payment transaction identifier generated by the processor.
        /// </summary>
        /// <value>
        /// The number.
        /// </value>
        [DataMember(Name = TRANSACTION_KEY)]
        public string Transaction { get; set; }

        /// <summary>
        /// Gets or sets the payment date.
        /// </summary>
        /// <value>
        /// The creation.
        /// </value>
        [DataMember(Name = PAID_ON_DATE_KEY)]
        public DateTimeOffset? PaidOn { get; set; }

        /// <summary>
        /// Gets or sets the receipt currency code related to the values.
        /// </summary>
        /// <value>
        /// The currency.
        /// </value>
        [DataMember(Name = CURRENCY_KEY)]
        public string Currency { get; set; }

        /// <summary>
        /// Gets or sets the receipt total taxes value.
        /// </summary>
        /// <value>
        /// The taxes.
        /// </value>
        [DataMember(Name = TAXES_KEY)]
        public decimal? Taxes { get; set; }

        /// <summary>
        /// Gets or sets the receipt total value, including taxes.
        /// </summary>
        /// <value>
        /// The total.
        /// </value>
        [DataMember(Name = TOTAL_KEY)]
        public decimal Total { get; set; }
    }
}
